version: "3"

services:
  db:
    image: "postgres:latest"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-facoffee}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-facoffee}
      POSTGRES_DB: postgres
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/create-databases.sh:/docker-entrypoint-initdb.d/create-databases.sh
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "facoffee", "-d", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql
    restart: unless-stopped
    environment:
      POSTGRESQL_CONNECTION_URI: "postgresql://${POSTGRES_USER:-facoffee}:${POSTGRES_PASSWORD:-facoffee}@db:5432/facoffee_auth_db"
      ACCESS_TOKEN_VALIDITY: 3600
      REFRESH_TOKEN_VALIDITY: 43200
      API_KEYS: ${SUPERTOKENS_API_KEY?api key is required for supertokens}
    ports:
      - 3567:3567
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5

  auth:
    build:
      context: services/facoffee-auth
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      PORT: 80
      SUPERTOKENS_URL: http://supertokens:3567
      SUPERTOKENS_API_KEY: ${SUPERTOKENS_API_KEY?api key is required for supertokens}
      BASE_URL: ${DOMAIN:-http://localhost:${HTTP_PORT:-8080}}
      BASE_URL_PATH: /auth
      WEBSITE_URL: ${DOMAIN:-http://localhost:${HTTP_PORT:-8080}}
      WEBSITE_URL_PATH: /
    depends_on:
      supertokens:
        condition: service_healthy

  api:
    build:
      context: services/facoffee-api
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      PORT: 80
      DATABASE_URL: postgresql://${POSTGRES_USER:-facoffee}:${POSTGRES_PASSWORD:-facoffee}@db:5432/facoffee_api_db
      BASE_URL: ${DOMAIN:-http://localhost:${HTTP_PORT:-8080}}/api
      AUTH_BASE_URL: http://auth:80/auth
      DATA_DIR: /data
    volumes:
      - ./data:/data
    depends_on:
      - auth

  website:
    build:
      context: services/facoffee-website
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      PORT: 80
    depends_on:
      - auth
      - api

  caddy:
    image: caddy:alpine
    command: caddy run --watch -c /etc/caddy/Caddyfile
    restart: unless-stopped
    environment:
      DOMAIN: ${DOMAIN:-localhost}
    ports:
      - ${HTTP_PORT:-80}:80
      - ${HTTPS_PORT:-443}:443
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
    depends_on:
      - auth
      - api
      - website
    healthcheck:
      test: ["CMD", "caddy", "version"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  caddy_data:
    driver: local
